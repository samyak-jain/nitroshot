import { SpinBox, Button, CheckBox, Slider, GroupBox } from "sixtyfps_widgets.60";
import { PushButton } from "./button.60";
export MainWindow := Window {
    callback start-recording(int, int);
    callback take-screenshot(int, int);

    property <int> delay;
    property <int> capture-type: -1;

    property <bool> window-selected: false;
    property <bool> screen-selected: false;
    property <bool> selection-selected: false;

    background: #1B2129;

    VerticalLayout {
        alignment: center;
        padding: 30px;
        spacing: 20px;

        HorizontalLayout {
            vertical-stretch: 1;
            max-height: 40px;
            spacing: 20px;

            PushButton {
              text: "Take Screenshot";
              pushcolor: white;
              pressed_color: #3498DB;
              base_color: #22A7F0;
              clicked => { root.take-screenshot(capture-type, delay) }
            }

            PushButton {
              text: "Start Recording";
              pushcolor: white;
              pressed_color: #C31300;
              base_color: #D91500;
              clicked => { root.start-recording(capture-type, delay) }
            }
        }

        HorizontalLayout {
            vertical-stretch: 1;
            min-height: 50px;
            max-height: 70px;
            spacing: 20px;

            PushButton {
                vertical-padding: 10px;
                text: "Selection";
                create_img: true;
                icon: @image-url("./icons/selection.svg");
                pushcolor: white;
                selected: selection-selected;
                pressed_color: #323F4D;
                base_color: #28303D;
                clicked => { 
                    if (capture-type == 0) {
                        selection-selected = false;
                        capture-type = -1;
                    } else {
                        selection-selected = true;
                        capture-type = 0;
                    }
                    window-selected = false;
                    screen-selected = false;
                }
            }

            PushButton {
                vertical-padding: 10px;
                text: "Screen";
                create_img: true;
                icon: @image-url("./icons/screen.svg");
                pushcolor: white;
                selected: screen-selected;
                pressed_color: #323F4D;
                base_color: #28303D;
                clicked => { 
                    if (capture-type == 1) {
                        screen-selected = false;
                        capture-type = -1;
                    } else {
                        screen-selected = true;
                        capture-type = 1;
                    }
                    window-selected = false;
                    selection-selected = false;
                }
            }

            PushButton {
                vertical-padding: 10px;
                text: "Window";
                create_img: true;
                icon: @image-url("./icons/window.svg");
                pushcolor: white;
                selected: window-selected;
                pressed_color: #323F4D;
                base_color: #28303D;
                clicked => { 
                    if (capture-type == 2) {
                        window-selected = false;
                        capture-type = -1;
                    } else {
                        window-selected = true;
                        capture-type = 2;
                    }
                    screen-selected = false;
                    selection-selected = false;
                }
            }
        }

        HorizontalLayout {
            vertical-stretch: 1;
            min-height: 30px;
            max-height: 40px;

            Rectangle {
                border-radius: 5px;
                border-width: 1px;
                border-color: white;

                HorizontalLayout {
                    padding-left: 20px;
                    padding-right: 20px;

                    Text {
                        text: "Delay in seconds: ";
                        vertical-alignment: TextVerticalAlignment.center;
                        color: white;
                    }

                    HorizontalLayout {
                        spacing: 20px;

                        PushButton {
                            max-width: 15px;
                            text: "-";
                            pushcolor: white;
                            clicked => { 
                                if (delay > 0) {
                                    delay -= 1 
                                }
                            }
                        }

                        Text {
                            max-width: 15px;
                            text: delay;
                            vertical-alignment: TextVerticalAlignment.center;
                            horizontal-alignment: TextHorizontalAlignment.center;
                            color: white;
                        }

                        PushButton {
                            max-width: 15px;
                            text: "+";
                            pushcolor: white;
                            clicked => { 
                                if (delay < 21) {
                                    delay += 1 
                                }
                            }
                        }
                    }
                }
            }
        }
    }

}
